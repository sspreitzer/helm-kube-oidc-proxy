apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}"
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy: {{ toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Chart.Name }}"
    spec:
      serviceAccountName: "{{ .Release.Name }}-{{ .Chart.Name }}"
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      volumes:
        - name: kube-oidc-proxy-tls
          secret:
            secretName: "{{ .Release.Name }}-{{ .Chart.Name }}"
            items:
              - key: tls.crt
                path: cert.pem
              - key: tls.key
                path: key.pem
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: "{{ .Release.Name }}-{{ .Chart.Name }}"
          image: {{ .Values.deployment.image.name | quote }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy | quote }}
          command:
            - kube-oidc-proxy
            - --oidc-ca-file=/etc/ssl/certs/ca-certificates.crt
            - --tls-cert-file=/etc/oidc/tls/cert.pem
            - --tls-private-key-file=/etc/oidc/tls/key.pem
            - "--oidc-issuer-url={{ .Values.oidc.issuer }}"
            - "--oidc-client-id={{ .Values.oidc.clientID }}"
            - "--oidc-username-claim={{ .Values.oidc.usernameClaim }}"
            - "--oidc-username-prefix={{ .Values.oidc.usernamePrefix }}"
            - "--oidc-groups-claim={{ .Values.oidc.groupsClaim }}"
            - "--oidc-groups-prefix={{ .Values.oidc.groupsPrefix }}"
            {{- range .Values.oidc.requiredClaims }}
            - "--oidc-required-claim={{ . }}"
            {{- end }}
          resources: {{ toYaml .Values.deployment.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
          livenessProbe:
            httpGet:
              path: /live
              port: metrics
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
          ports:
            - name: metrics
              containerPort: 8080
            - name: https
              containerPort: 6443
          volumeMounts:
            - name: kube-oidc-proxy-tls
              mountPath: /etc/oidc/tls
              readOnly: true
